{"ast":null,"code":"var _jsxFileName = \"/Users/corythomas/GitHub/react-examples/src/components/JokesTen.js\";\nimport React, { Component } from 'react'; // instead of props\n\nconst Joke = ({\n  jokes\n}) => {\n  const _joke = joke,\n        setup = _joke.setup,\n        punchline = _joke.punchline;\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, setup, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, punchline));\n};\n\nclass JokesTen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      joke: {},\n      jokes: []\n    };\n\n    this.fetchJokes = () => {\n      fetch('https://official-joke-api.appspot.com/random_ten').then(response => response.json()).then(json => this.setState({\n        jokes: json\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // store any fetches or asyncronishe code in here \n    fetch('https://official-joke-api.appspot.com/random_joke').then(response => response.json()).then(json => this.setState({\n      joke: json\n    })); // or\n    // fetch('https://official-joke-api.appspot.com/random_joke').then(response => { return response.json() };\n  }\n\n  render() {\n    const _this$state$joke = this.state.joke,\n          setup = _this$state$joke.setup,\n          punchline = _this$state$joke.punchline;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" Ten Highlighted Jokes\"), React.createElement(Joke, {\n      joke: setup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Joke, {\n      joke: punchline,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.state.jokes.map(joke => {\n      const id = joke.id,\n            setup = joke.setup,\n            punchline = joke.punchline;\n      return React.createElement(\"p\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, setup, \" \", React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, punchline));\n    }), React.createElement(\"button\", {\n      onClick: this.fetchJokes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"10 new Jokes\"));\n  }\n\n}\n\nexport default JokesTen;","map":{"version":3,"sources":["/Users/corythomas/GitHub/react-examples/src/components/JokesTen.js"],"names":["React","Component","Joke","jokes","joke","setup","punchline","JokesTen","state","fetchJokes","fetch","then","response","json","setState","componentDidMount","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA,gBACIC,IADJ;AAAA,QACfC,KADe,SACfA,KADe;AAAA,QACTC,SADS,SACTA,SADS;AAErB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAJ,EAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,SAAL,CAAV,CAAP;AACH,CAHD;;AAKA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AAACJ,MAAAA,IAAI,EAAC,EAAN;AAAUD,MAAAA,KAAK,EAAC;AAAhB,KADqB;;AAAA,SAY7BM,UAZ6B,GAYhB,MAAM;AACfC,MAAAA,KAAK,CAAC,kDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEU;AAAR,OAAd,CAFd;AAGH,KAhB4B;AAAA;;AAG7BE,EAAAA,iBAAiB,GAAG;AAChB;AACAL,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACmCF,IADnC,CACwCE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAES;AAAP,KAAd,CADhD,EAFgB,CAKhB;AACA;AACH;;AAQDG,EAAAA,MAAM,GAAG;AAAA,6BACqB,KAAKR,KAAL,CAAWJ,IADhC;AAAA,UACEC,KADF,oBACEA,KADF;AAAA,UACQC,SADR,oBACQA,SADR;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAEA,oBAAE,IAAF;AAAO,MAAA,IAAI,EAAED,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAE,IAAF;AAAO,MAAA,IAAI,EAAEC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAKI,KAAKE,KAAL,CAAWL,KAAX,CAAiBc,GAAjB,CAAqBb,IAAI,IAAI;AAAA,YAClBc,EADkB,GACOd,IADP,CAClBc,EADkB;AAAA,YACdb,KADc,GACOD,IADP,CACdC,KADc;AAAA,YACPC,SADO,GACOF,IADP,CACPE,SADO;AAGzB,aAAO;AAAG,QAAA,GAAG,EAAEY,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAab,KAAb,OAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,SAAL,CAApB,CAAP;AACH,KAJD,CALJ,EAWA;AAAQ,MAAA,OAAO,EAAG,KAAKG,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXA,CADJ;AAgBH;;AApC4B;;AAuCjC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\n\n// instead of props\nconst Joke = ({jokes}) =>{\n    const{setup,punchline} = joke;\n    return <p>{setup}<em>{punchline}</em></p>;\n}\n\nclass JokesTen extends Component {\n    state = {joke:{}, jokes:[] };\n\n    componentDidMount() {\n        // store any fetches or asyncronishe code in here \n        fetch('https://official-joke-api.appspot.com/random_joke')\n        .then(response => response.json()).then(json => this.setState({joke: json}))\n\n        // or\n        // fetch('https://official-joke-api.appspot.com/random_joke').then(response => { return response.json() };\n    }\n\n    fetchJokes = () => {\n        fetch('https://official-joke-api.appspot.com/random_ten')\n        .then(response => response.json())\n        .then(json => this.setState({jokes: json}))\n    }\n\n    render() {\n        const {setup,punchline} = this.state.joke;\n        return (\n            <div>\n            <h2> Ten Highlighted Jokes</h2>\n            < Joke joke={setup} />\n            < Joke joke={punchline} />\n             {\n                this.state.jokes.map(joke => {\n                    const {id, setup, punchline } = joke;\n\n                    return <p key={id}>{setup} <em>{punchline}</em></p>\n                })\n            }\n            <button onClick ={this.fetchJokes}>10 new Jokes</button>\n           \n            </div>\n        )\n    }\n}\n    \nexport default JokesTen;"]},"metadata":{},"sourceType":"module"}