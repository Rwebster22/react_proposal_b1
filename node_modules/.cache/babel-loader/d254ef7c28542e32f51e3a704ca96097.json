{"ast":null,"code":"var _jsxFileName = \"/Users/corythomas/GitHub/react-examples/src/components/JokesTen.js\";\nimport React, { Component } from 'react';\n\nconst Joke = ({\n  joke: {\n    setup,\n    punchline\n  }\n}) => React.createElement(\"p\", {\n  style: {\n    margin: 20\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3\n  },\n  __self: this\n}, setup, React.createElement(\"em\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3\n  },\n  __self: this\n}, punchline)); //Or\n// instead of props drill right to value\n// const Joke = ({joke}) =>{\n//     const{setup,punchline} = joke;\n//     return <p style={{ margin:20}}>{setup}<em>{punchline}</em></p>;\n// }\n\n\nclass JokesTen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      joke: {},\n      jokes: []\n    };\n\n    this.fetchJokes = () => {\n      fetch('https://official-joke-api.appspot.com/random_ten').then(response => response.json()).then(json => this.setState({\n        jokes: json\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // store any fetches or asyncronishe code in here \n    fetch('https://official-joke-api.appspot.com/random_joke').then(response => response.json()).then(json => this.setState({\n      joke: json\n    })); // or\n    // fetch('https://official-joke-api.appspot.com/random_joke').then(response => { return response.json() };\n  }\n\n  render() {\n    const _this$state$joke = this.state.joke,\n          setup = _this$state$joke.setup,\n          punchline = _this$state$joke.punchline;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Ten Highlighted Jokes\"), React.createElement(Joke, {\n      joke: this.state.joke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), this.state.jokes.map(joke => {\n      React.createElement(Joke, {\n        key: joke.id,\n        joke: joke,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }); // Or\n      // return <p key={id}>{setup} <em>{punchline}</em></p>\n    }), React.createElement(\"button\", {\n      onClick: this.fetchJokes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"10 new Jokes\"));\n  }\n\n}\n\nexport default JokesTen;","map":{"version":3,"sources":["/Users/corythomas/GitHub/react-examples/src/components/JokesTen.js"],"names":["React","Component","Joke","joke","setup","punchline","margin","JokesTen","state","jokes","fetchJokes","fetch","then","response","json","setState","componentDidMount","render","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAP,CAAD,KACT;AAAG,EAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAC;AAAT,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBF,KAAzB,EAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKC,SAAL,CAA/B,CADJ,C,CAGA;AACA;AACA;AACA;AACA;AACA;;;AAIA,MAAME,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB;AAACL,MAAAA,IAAI,EAAC,EAAN;AAAUM,MAAAA,KAAK,EAAC;AAAhB,KADqB;;AAAA,SAY7BC,UAZ6B,GAYhB,MAAM;AACfC,MAAAA,KAAK,CAAC,kDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAEK;AAAR,OAAd,CAFd;AAGH,KAhB4B;AAAA;;AAG7BE,EAAAA,iBAAiB,GAAG;AAChB;AACAL,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EACmCF,IADnC,CACwCE,IAAI,IAAI,KAAKC,QAAL,CAAc;AAACZ,MAAAA,IAAI,EAAEW;AAAP,KAAd,CADhD,EAFgB,CAKhB;AACA;AACH;;AAQDG,EAAAA,MAAM,GAAG;AAAA,6BACqB,KAAKT,KAAL,CAAWL,IADhC;AAAA,UACEC,KADF,oBACEA,KADF;AAAA,UACQC,SADR,oBACQA,SADR;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAEA,oBAAE,IAAF;AAAO,MAAA,IAAI,EAAE,KAAKG,KAAL,CAAWL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAII,KAAKK,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqBf,IAAI,IAAI;AACzB,0BAAE,IAAF;AAAO,QAAA,GAAG,EAAEA,IAAI,CAACgB,EAAjB;AAAqB,QAAA,IAAI,EAAEhB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADyB,CAEzB;AACA;AACH,KAJD,CAJJ,EAUA;AAAQ,MAAA,OAAO,EAAG,KAAKO,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVA,CADJ;AAeH;;AAnC4B;;AAsCjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\nconst Joke = ({joke: {setup,punchline}}) =>(\n    <p style={{ margin:20}}>{setup}<em>{punchline}</em></p>\n)\n//Or\n// instead of props drill right to value\n// const Joke = ({joke}) =>{\n//     const{setup,punchline} = joke;\n//     return <p style={{ margin:20}}>{setup}<em>{punchline}</em></p>;\n// }\n\n\n\nclass JokesTen extends Component {\n    state = {joke:{}, jokes:[] };\n\n    componentDidMount() {\n        // store any fetches or asyncronishe code in here \n        fetch('https://official-joke-api.appspot.com/random_joke')\n        .then(response => response.json()).then(json => this.setState({joke: json}))\n\n        // or\n        // fetch('https://official-joke-api.appspot.com/random_joke').then(response => { return response.json() };\n    }\n\n    fetchJokes = () => {\n        fetch('https://official-joke-api.appspot.com/random_ten')\n        .then(response => response.json())\n        .then(json => this.setState({jokes: json}))\n    }\n\n    render() {\n        const {setup,punchline} = this.state.joke;\n        return (\n            <div>\n            <h2> Ten Highlighted Jokes</h2>\n            < Joke joke={this.state.joke} />\n             {\n                this.state.jokes.map(joke => {\n                    < Joke key={joke.id} joke={joke} />\n                    // Or\n                    // return <p key={id}>{setup} <em>{punchline}</em></p>\n                })\n            }\n            <button onClick ={this.fetchJokes}>10 new Jokes</button>\n           \n            </div>\n        )\n    }\n}\n    \nexport default JokesTen;"]},"metadata":{},"sourceType":"module"}