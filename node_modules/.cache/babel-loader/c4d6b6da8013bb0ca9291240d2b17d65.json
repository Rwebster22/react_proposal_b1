{"ast":null,"code":"var _jsxFileName = \"/Users/corythomas/GitHub/react-examples/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport App from './components/App';\nimport { tsConstructorType } from '@babel/types';\nimport Jokes from './components/Jokes';\nimport \"./index.css\";\nimport { promises } from 'dns';\nconst history = createBrowserHistory();\nReactDOM.render(React.createElement(Router, {\n  history: history,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/jokes\",\n  component: Jokes,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}))), document.getElementById('root')); // Promises - fires code after asychronouse functionality \n// new Promise((resolve, reject) =>{\n//     // try catch for asyncronise functionality \n//     return reject(new Error('No Bears'));\n//     setTimeout(() => {\n//     resolve('Bears, Beats, BattleStar Galatica');\n// },2000)}).then(quote =>{\n//     console.log(quote);\n// }).catch(error => console.log('error',error));\n//++++++++++++  OLD - example code +++++++++++++\n// class Animal{\n// //attributes for instances of this class\n// constructor(name, age){\n// this.name = name;\n// this.age = age;\n// }\n// speak(){\n// console.log(\"I am \" + this.name + \" and I am \" + this.age + \" years old\")\n// }\n// }\n// //a new instance of animal class - constants cant be changed \n// const animal1 = new Animal(\"Simba\",3)\n// animal1.speak();\n// console.log(animal1);\n// class lion extends Animal{\n// constructor(name, age, furColor, speed){\n// super(name,age);\n// this.furColor = furColor;\n// this.speed = speed;\n// }\n// roar(){\n// console.log(\"I have \" + this.furColor + \" fur color and i can run \" + this.speed + \" mph\");\n// }\n// }\n// //instance of lion class \n// const lion1 = new lion(\"Mufasa\",30, \"blue\", 25);\n// lion1.speak();\n// lion1.roar();\n// console.log(lion1);","map":{"version":3,"sources":["/Users/corythomas/GitHub/react-examples/src/index.js"],"names":["React","ReactDOM","Router","Switch","Route","createBrowserHistory","App","tsConstructorType","Jokes","promises","history","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAoC,kBAApC;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,iBAAT,QAAkC,cAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,KAAzB;AAEA,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;AAEAJ,QAAQ,CAACU,MAAT,CACQ,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEJ,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,QAAZ;AAAqB,EAAA,SAAS,EAAEE,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CADA,CADR,EAOII,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPJ,E,CAUA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'; \nimport ReactDOM from 'react-dom';\nimport {Router, Switch, Route} from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport App from './components/App';\nimport { tsConstructorType } from '@babel/types';\nimport Jokes from './components/Jokes';\nimport \"./index.css\"\nimport { promises } from 'dns';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n        <Router history={history}>\n        <Switch>\n            <Route path='/' component={App}/>\n            <Route path='/jokes' component={Jokes}/>\n        </Switch>  \n        </Router>, \n    document.getElementById('root')\n    );\n\n// Promises - fires code after asychronouse functionality \n\n// new Promise((resolve, reject) =>{\n//     // try catch for asyncronise functionality \n//     return reject(new Error('No Bears'));\n\n//     setTimeout(() => {\n//     resolve('Bears, Beats, BattleStar Galatica');\n// },2000)}).then(quote =>{\n//     console.log(quote);\n// }).catch(error => console.log('error',error));\n\n\n\n\n//++++++++++++  OLD - example code +++++++++++++\n\n// class Animal{\n\n// //attributes for instances of this class\n// constructor(name, age){\n// this.name = name;\n// this.age = age;\n// }\n\n// speak(){\n// console.log(\"I am \" + this.name + \" and I am \" + this.age + \" years old\")\n// }\n// }\n\n// //a new instance of animal class - constants cant be changed \n// const animal1 = new Animal(\"Simba\",3)\n// animal1.speak();\n// console.log(animal1);\n\n\n// class lion extends Animal{\n// constructor(name, age, furColor, speed){\n// super(name,age);\n// this.furColor = furColor;\n// this.speed = speed;\n// }\n\n// roar(){\n// console.log(\"I have \" + this.furColor + \" fur color and i can run \" + this.speed + \" mph\");\n// }\n// }\n\n\n// //instance of lion class \n// const lion1 = new lion(\"Mufasa\",30, \"blue\", 25);\n// lion1.speak();\n// lion1.roar();\n// console.log(lion1);"]},"metadata":{},"sourceType":"module"}